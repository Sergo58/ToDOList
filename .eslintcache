[{"F:\\IT\\src\\index.tsx":"1","F:\\IT\\src\\app\\app-reducer.ts":"2","F:\\IT\\src\\features\\TodolistsList\\todolists-reducer.ts":"3","F:\\IT\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx":"4","F:\\IT\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"5","F:\\IT\\src\\api\\todolists-api.ts":"6","F:\\IT\\src\\app\\App.tsx":"7","F:\\IT\\src\\components\\AddItemForm\\AddItemForm.tsx":"8","F:\\IT\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"9","F:\\IT\\src\\features\\Login\\Login.tsx":"10","F:\\IT\\src\\components\\EditableSpan\\EditableSpan.tsx":"11","F:\\IT\\src\\features\\TodolistsList\\tasks-reducer.ts":"12","F:\\IT\\src\\app\\store.ts":"13","F:\\IT\\src\\features\\Login\\auth-reducer.ts":"14","F:\\IT\\src\\features\\TodolistsList\\TodolistsList.tsx":"15","F:\\IT\\src\\reportWebVitals.ts":"16","F:\\IT\\src\\utils\\error-utils.ts":"17"},{"size":643,"mtime":1611389400000,"results":"18","hashOfConfig":"19"},{"size":2478,"mtime":1619896865083,"results":"20","hashOfConfig":"19"},{"size":4585,"mtime":1597327450000,"results":"21","hashOfConfig":"19"},{"size":1092,"mtime":1596716576000,"results":"22","hashOfConfig":"19"},{"size":1773,"mtime":1619896865170,"results":"23","hashOfConfig":"19"},{"size":3014,"mtime":1619929743267,"results":"24","hashOfConfig":"19"},{"size":2653,"mtime":1619896865061,"results":"25","hashOfConfig":"19"},{"size":1595,"mtime":1619896865085,"results":"26","hashOfConfig":"19"},{"size":4193,"mtime":1619896865173,"results":"27","hashOfConfig":"19"},{"size":3723,"mtime":1619896865107,"results":"28","hashOfConfig":"19"},{"size":952,"mtime":1594154725462,"results":"29","hashOfConfig":"19"},{"size":5633,"mtime":1619896865241,"results":"30","hashOfConfig":"19"},{"size":1181,"mtime":1619896865084,"results":"31","hashOfConfig":"19"},{"size":2105,"mtime":1619896865130,"results":"32","hashOfConfig":"19"},{"size":4017,"mtime":1619896865234,"results":"33","hashOfConfig":"19"},{"size":440,"mtime":1619896865291,"results":"34","hashOfConfig":"19"},{"size":811,"mtime":1619896865295,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1xbk74y",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"41"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"F:\\IT\\src\\index.tsx",[],["82","83"],"F:\\IT\\src\\app\\app-reducer.ts",[],["84","85"],"F:\\IT\\src\\features\\TodolistsList\\todolists-reducer.ts",["86"],"import {todolistsAPI, TodolistType} from '../../api/todolists-api'\r\nimport {Dispatch} from 'redux'\r\nimport {RequestStatusType, setAppStatusAC, SetAppStatusActionType} from '../../app/app-reducer'\r\n\r\nconst initialState: Array<TodolistDomainType> = []\r\n\r\nexport const todolistsReducer = (state: Array<TodolistDomainType> = initialState, action: ActionsType): Array<TodolistDomainType> => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TODOLIST':\r\n            return state.filter(tl => tl.id != action.id)\r\n        case 'ADD-TODOLIST':\r\n            return [{...action.todolist, filter: 'all', entityStatus: 'idle'}, ...state]\r\n\r\n        case 'CHANGE-TODOLIST-TITLE':\r\n            return state.map(tl => tl.id === action.id ? {...tl, title: action.title} : tl)\r\n        case 'CHANGE-TODOLIST-FILTER':\r\n            return state.map(tl => tl.id === action.id ? {...tl, filter: action.filter} : tl)\r\n        case 'CHANGE-TODOLIST-ENTITY-STATUS':\r\n            return state.map(tl => tl.id === action.id ? {...tl, entityStatus: action.status} : tl)\r\n        case 'SET-TODOLISTS':\r\n            return action.todolists.map(tl => ({...tl, filter: 'all', entityStatus: 'idle'}))\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const removeTodolistAC = (id: string) => ({type: 'REMOVE-TODOLIST', id} as const)\r\nexport const addTodolistAC = (todolist: TodolistType) => ({type: 'ADD-TODOLIST', todolist} as const)\r\nexport const changeTodolistTitleAC = (id: string, title: string) => ({\r\n    type: 'CHANGE-TODOLIST-TITLE',\r\n    id,\r\n    title\r\n} as const)\r\nexport const changeTodolistFilterAC = (id: string, filter: FilterValuesType) => ({\r\n    type: 'CHANGE-TODOLIST-FILTER',\r\n    id,\r\n    filter\r\n} as const)\r\nexport const changeTodolistEntityStatusAC = (id: string, status: RequestStatusType) => ({\r\n    type: 'CHANGE-TODOLIST-ENTITY-STATUS', id, status } as const)\r\nexport const setTodolistsAC = (todolists: Array<TodolistType>) => ({type: 'SET-TODOLISTS', todolists} as const)\r\n\r\n// thunks\r\nexport const fetchTodolistsTC = () => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        todolistsAPI.getTodolists()\r\n            .then((res) => {\r\n                dispatch(setTodolistsAC(res.data))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n}\r\nexport const removeTodolistTC = (todolistId: string) => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        //изменим глобальный статус приложения, чтобы вверху полоса побежала\r\n        dispatch(setAppStatusAC('loading'))\r\n        //изменим статус конкретного тудулиста, чтобы он мог задизеблить что надо\r\n        dispatch(changeTodolistEntityStatusAC(todolistId, 'loading'))\r\n        todolistsAPI.deleteTodolist(todolistId)\r\n            .then((res) => {\r\n                dispatch(removeTodolistAC(todolistId))\r\n                //скажем глобально приложению, что асинхронная операция завершена\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n}\r\nexport const addTodolistTC = (title: string) => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        todolistsAPI.createTodolist(title)\r\n            .then((res) => {\r\n                dispatch(addTodolistAC(res.data.data.item))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n}\r\nexport const changeTodolistTitleTC = (id: string, title: string) => {\r\n    return (dispatch: Dispatch<ActionsType>) => {\r\n        todolistsAPI.updateTodolist(id, title)\r\n            .then((res) => {\r\n                dispatch(changeTodolistTitleAC(id, title))\r\n            })\r\n    }\r\n}\r\n\r\n// types\r\nexport type AddTodolistActionType = ReturnType<typeof addTodolistAC>;\r\nexport type RemoveTodolistActionType = ReturnType<typeof removeTodolistAC>;\r\nexport type SetTodolistsActionType = ReturnType<typeof setTodolistsAC>;\r\ntype ActionsType =\r\n    | RemoveTodolistActionType\r\n    | AddTodolistActionType\r\n    | ReturnType<typeof changeTodolistTitleAC>\r\n    | ReturnType<typeof changeTodolistFilterAC>\r\n    | SetTodolistsActionType\r\n    | ReturnType<typeof changeTodolistEntityStatusAC>\r\nexport type FilterValuesType = 'all' | 'active' | 'completed';\r\nexport type TodolistDomainType = TodolistType & {\r\n    filter: FilterValuesType\r\n    entityStatus: RequestStatusType\r\n}\r\ntype ThunkDispatch = Dispatch<ActionsType | SetAppStatusActionType>\r\n",["87","88"],"F:\\IT\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx",[],["89","90"],"F:\\IT\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["91","92","93"],"F:\\IT\\src\\api\\todolists-api.ts",[],"F:\\IT\\src\\app\\App.tsx",["94","95"],"import React, {useCallback, useEffect} from 'react'\r\nimport './App.css'\r\nimport {\r\n    AppBar,\r\n    Button,\r\n    CircularProgress,\r\n    Container,\r\n    IconButton,\r\n    LinearProgress,\r\n    Toolbar,\r\n    Typography\r\n} from '@material-ui/core'\r\nimport {Menu} from '@material-ui/icons'\r\nimport {TodolistsList} from '../features/TodolistsList/TodolistsList'\r\nimport {ErrorSnackbar} from '../components/ErrorSnackbar/ErrorSnackbar'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from './store'\r\nimport {initializeAppTC, RequestStatusType} from './app-reducer'\r\nimport {BrowserRouter, Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {Login} from \"../features/Login/Login\";\r\nimport {logOutTC} from \"../features/Login/auth-reducer\";\r\n\r\ntype PropsType = {\r\n    demo?: boolean\r\n}\r\n\r\nfunction App({demo = false}: PropsType) {\r\n    useEffect(()=>{\r\n        dispatch(initializeAppTC())\r\n    },[])\r\n    const status = useSelector<AppRootStateType, RequestStatusType>((state) => state.app.status)\r\n    const initialized = useSelector<AppRootStateType, boolean>((state) => state.app.isInitialized)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>((state) => state.auth.isLoggedIn)\r\n\r\n    const dispatch=useDispatch()\r\n\r\n\r\n\r\n    let logOutHandler=useCallback(()=>{\r\n        dispatch(logOutTC())\r\n    },[])\r\n\r\n    if (!initialized) {\r\n        return <div\r\n            style={{position: 'fixed', top: '30%', textAlign: 'center', width: '100%'}}>\r\n            <CircularProgress/>\r\n        </div>\r\n    }\r\n\r\n\r\n    return (\r\n  <BrowserRouter>\r\n        <div className=\"App\">\r\n            <ErrorSnackbar />\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n                        <Menu/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\">\r\n                        News\r\n                    </Typography>\r\n                    {isLoggedIn && <Button color=\"inherit\" onClick={logOutHandler}>Log out</Button>}\r\n                </Toolbar>\r\n             { status === 'loading' &&  <LinearProgress /> }\r\n            </AppBar>\r\n            <Container fixed>\r\n                <Switch>\r\n                <Route exact path={'/'} render={()=><TodolistsList demo={demo}/>}/>\r\n                <Route path={'/login'} render={()=><Login/>} />\r\n                <Route path={ '/404' } render={ () => <h1>404: PAGE NOT FOUND</h1> }/>\r\n                <Redirect from={'*'} to={'/404'}/>\r\n                </Switch>\r\n            </Container>\r\n        </div>\r\n  </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default App\r\n","F:\\IT\\src\\components\\AddItemForm\\AddItemForm.tsx",["96","97","98"],"F:\\IT\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["99","100","101","102","103","104"],"import React, {useCallback, useEffect} from 'react'\r\nimport {AddItemForm} from '../../../components/AddItemForm/AddItemForm'\r\nimport {EditableSpan} from '../../../components/EditableSpan/EditableSpan'\r\nimport {Button, IconButton} from '@material-ui/core'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {Task} from './Task/Task'\r\nimport {TaskStatuses, TaskType} from '../../../api/todolists-api'\r\nimport {FilterValuesType, TodolistDomainType} from '../todolists-reducer'\r\nimport {useDispatch} from 'react-redux'\r\nimport {fetchTasksTC} from '../tasks-reducer'\r\n\r\ntype PropsType = {\r\n    todolist: TodolistDomainType\r\n    tasks: Array<TaskType>\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    removeTodolist: (id: string) => void\r\n    changeTodolistTitle: (id: string, newTitle: string) => void\r\n    demo?: boolean\r\n}\r\n\r\nexport const Todolist = React.memo(function ({demo = false, ...props}: PropsType) {\r\n    console.log('Todolist called')\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (demo) {\r\n            return\r\n        }\r\n        const thunk = fetchTasksTC(props.todolist.id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback((title: string) => {\r\n        props.addTask(title, props.todolist.id)\r\n    }, [props.addTask, props.todolist.id])\r\n\r\n    const removeTodolist = () => {\r\n        props.removeTodolist(props.todolist.id)\r\n    }\r\n    const changeTodolistTitle = useCallback((title: string) => {\r\n        props.changeTodolistTitle(props.todolist.id, title)\r\n    }, [props.todolist.id, props.changeTodolistTitle])\r\n\r\n    const onAllClickHandler = useCallback(() => props.changeFilter('all', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n    const onActiveClickHandler = useCallback(() => props.changeFilter('active', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n    const onCompletedClickHandler = useCallback(() => props.changeFilter('completed', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n\r\n\r\n    let tasksForTodolist = props.tasks\r\n\r\n    if (props.todolist.filter === 'active') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.New)\r\n    }\r\n    if (props.todolist.filter === 'completed') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.Completed)\r\n    }\r\n\r\n    return <div>\r\n        <h3><EditableSpan value={props.todolist.title} onChange={changeTodolistTitle}/>\r\n            <IconButton onClick={removeTodolist} disabled={props.todolist.entityStatus === 'loading'}>\r\n                <Delete/>\r\n            </IconButton>\r\n        </h3>\r\n        <AddItemForm addItem={addTask} disabled={props.todolist.entityStatus === 'loading'}/>\r\n        <div>\r\n            {\r\n                tasksForTodolist.map(t => <Task key={t.id} task={t} todolistId={props.todolist.id}\r\n                                                removeTask={props.removeTask}\r\n                                                changeTaskTitle={props.changeTaskTitle}\r\n                                                changeTaskStatus={props.changeTaskStatus}\r\n                />)\r\n            }\r\n        </div>\r\n        <div style={{paddingTop: '10px'}}>\r\n            <Button variant={props.todolist.filter === 'all' ? 'outlined' : 'text'}\r\n                    onClick={onAllClickHandler}\r\n                    color={'default'}\r\n            >All\r\n            </Button>\r\n            <Button variant={props.todolist.filter === 'active' ? 'outlined' : 'text'}\r\n                    onClick={onActiveClickHandler}\r\n                    color={'primary'}>Active\r\n            </Button>\r\n            <Button variant={props.todolist.filter === 'completed' ? 'outlined' : 'text'}\r\n                    onClick={onCompletedClickHandler}\r\n                    color={'secondary'}>Completed\r\n            </Button>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\n",["105","106"],"F:\\IT\\src\\features\\Login\\Login.tsx",["107","108","109"],"F:\\IT\\src\\components\\EditableSpan\\EditableSpan.tsx",[],"F:\\IT\\src\\features\\TodolistsList\\tasks-reducer.ts",["110","111"],"import {AddTodolistActionType, RemoveTodolistActionType, SetTodolistsActionType} from './todolists-reducer'\r\nimport {TaskPriorities, TaskStatuses, TaskType, todolistsAPI, UpdateTaskModelType} from '../../api/todolists-api'\r\nimport {Dispatch} from 'redux'\r\nimport {AppRootStateType} from '../../app/store'\r\nimport {setAppErrorAC, SetAppErrorActionType, setAppStatusAC, SetAppStatusActionType} from '../../app/app-reducer'\r\nimport {handleServerAppError, handleServerNetworkError} from '../../utils/error-utils'\r\n\r\nconst initialState: TasksStateType = {}\r\n\r\nexport const tasksReducer = (state: TasksStateType = initialState, action: ActionsType): TasksStateType => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TASK':\r\n            return {...state, [action.todolistId]: state[action.todolistId].filter(t => t.id != action.taskId)}\r\n        case 'ADD-TASK':\r\n            return {...state, [action.task.todoListId]: [action.task, ...state[action.task.todoListId]]}\r\n        case 'UPDATE-TASK':\r\n            return {\r\n                ...state,\r\n                [action.todolistId]: state[action.todolistId]\r\n                    .map(t => t.id === action.taskId ? {...t, ...action.model} : t)\r\n            }\r\n        case 'ADD-TODOLIST':\r\n            return {...state, [action.todolist.id]: []}\r\n        case 'REMOVE-TODOLIST':\r\n            const copyState = {...state}\r\n            delete copyState[action.id]\r\n            return copyState\r\n        case 'SET-TODOLISTS': {\r\n            const copyState = {...state}\r\n            action.todolists.forEach(tl => {\r\n                copyState[tl.id] = []\r\n            })\r\n            return copyState\r\n        }\r\n        case 'SET-TASKS':\r\n            return {...state, [action.todolistId]: action.tasks}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const removeTaskAC = (taskId: string, todolistId: string) =>\r\n    ({type: 'REMOVE-TASK', taskId, todolistId} as const)\r\nexport const addTaskAC = (task: TaskType) =>\r\n    ({type: 'ADD-TASK', task} as const)\r\nexport const updateTaskAC = (taskId: string, model: UpdateDomainTaskModelType, todolistId: string) =>\r\n    ({type: 'UPDATE-TASK', model, todolistId, taskId} as const)\r\nexport const setTasksAC = (tasks: Array<TaskType>, todolistId: string) =>\r\n    ({type: 'SET-TASKS', tasks, todolistId} as const)\r\n\r\n// thunks\r\nexport const fetchTasksTC = (todolistId: string) => (dispatch: Dispatch<ActionsType | SetAppStatusActionType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    todolistsAPI.getTasks(todolistId)\r\n        .then((res) => {\r\n            const tasks = res.data.items\r\n            dispatch(setTasksAC(tasks, todolistId))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\nexport const removeTaskTC = (taskId: string, todolistId: string) => (dispatch: Dispatch<ActionsType>) => {\r\n    todolistsAPI.deleteTask(todolistId, taskId)\r\n        .then(res => {\r\n            const action = removeTaskAC(taskId, todolistId)\r\n            dispatch(action)\r\n        })\r\n}\r\nexport const addTaskTC = (title: string, todolistId: string) => (dispatch: Dispatch<ActionsType | SetAppErrorActionType | SetAppStatusActionType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    todolistsAPI.createTask(todolistId, title)\r\n        .then(res => {\r\n            if (res.data.resultCode === 0) {\r\n                const task = res.data.data.item\r\n                const action = addTaskAC(task)\r\n                dispatch(action)\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            } else {\r\n                handleServerAppError(res.data, dispatch);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        })\r\n}\r\nexport const updateTaskTC = (taskId: string, domainModel: UpdateDomainTaskModelType, todolistId: string) =>\r\n    (dispatch: ThunkDispatch, getState: () => AppRootStateType) => {\r\n        const state = getState()\r\n        const task = state.tasks[todolistId].find(t => t.id === taskId)\r\n        if (!task) {\r\n            //throw new Error(\"task not found in the state\");\r\n            console.warn('task not found in the state')\r\n            return\r\n        }\r\n\r\n        const apiModel: UpdateTaskModelType = {\r\n            deadline: task.deadline,\r\n            description: task.description,\r\n            priority: task.priority,\r\n            startDate: task.startDate,\r\n            title: task.title,\r\n            status: task.status,\r\n            ...domainModel\r\n        }\r\n\r\n        todolistsAPI.updateTask(todolistId, taskId, apiModel)\r\n            .then(res => {\r\n                if (res.data.resultCode === 0) {\r\n                    const action = updateTaskAC(taskId, domainModel, todolistId)\r\n                    dispatch(action)\r\n                } else {\r\n                    handleServerAppError(res.data, dispatch);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                handleServerNetworkError(error, dispatch);\r\n            })\r\n    }\r\n\r\n// types\r\nexport type UpdateDomainTaskModelType = {\r\n    title?: string\r\n    description?: string\r\n    status?: TaskStatuses\r\n    priority?: TaskPriorities\r\n    startDate?: string\r\n    deadline?: string\r\n}\r\nexport type TasksStateType = {\r\n    [key: string]: Array<TaskType>\r\n}\r\ntype ActionsType =\r\n    | ReturnType<typeof removeTaskAC>\r\n    | ReturnType<typeof addTaskAC>\r\n    | ReturnType<typeof updateTaskAC>\r\n    | AddTodolistActionType\r\n    | RemoveTodolistActionType\r\n    | SetTodolistsActionType\r\n    | ReturnType<typeof setTasksAC>\r\ntype ThunkDispatch = Dispatch<ActionsType | SetAppStatusActionType | SetAppErrorActionType>\r\n","F:\\IT\\src\\app\\store.ts",[],"F:\\IT\\src\\features\\Login\\auth-reducer.ts",["112","113"],"F:\\IT\\src\\features\\TodolistsList\\TodolistsList.tsx",["114","115","116","117","118","119","120","121"],"import React, {useCallback, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from '../../app/store'\r\nimport {\r\n    addTodolistTC,\r\n    changeTodolistFilterAC,\r\n    changeTodolistTitleTC,\r\n    fetchTodolistsTC,\r\n    FilterValuesType,\r\n    removeTodolistTC,\r\n    TodolistDomainType\r\n} from './todolists-reducer'\r\nimport {addTaskTC, removeTaskTC, TasksStateType, updateTaskTC} from './tasks-reducer'\r\nimport {TaskStatuses} from '../../api/todolists-api'\r\nimport {Grid, Paper} from '@material-ui/core'\r\nimport {AddItemForm} from '../../components/AddItemForm/AddItemForm'\r\nimport {Todolist} from './Todolist/Todolist'\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    demo?: boolean\r\n}\r\n\r\nexport const TodolistsList: React.FC<PropsType> = ({demo = false}) => {\r\n    const todolists = useSelector<AppRootStateType, Array<TodolistDomainType>>(state => state.todolists)\r\n    const tasks = useSelector<AppRootStateType, TasksStateType>(state => state.tasks)\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn=useSelector<AppRootStateType,boolean>(state => state.auth.isLoggedIn)\r\n    useEffect(()=>{\r\n        if(demo||!isLoggedIn){\r\n            return;\r\n        }\r\n        const thunk=fetchTodolistsTC()\r\n        dispatch(thunk)\r\n\r\n    },[])\r\n\r\n    const removeTask = useCallback(function (id: string, todolistId: string) {\r\n        const thunk = removeTaskTC(id, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback(function (title: string, todolistId: string) {\r\n        const thunk = addTaskTC(title, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeStatus = useCallback(function (id: string, status: TaskStatuses, todolistId: string) {\r\n        const thunk = updateTaskTC(id, {status}, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeTaskTitle = useCallback(function (id: string, newTitle: string, todolistId: string) {\r\n        const thunk = updateTaskTC(id, {title: newTitle}, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeFilter = useCallback(function (value: FilterValuesType, todolistId: string) {\r\n        const action = changeTodolistFilterAC(todolistId, value)\r\n        dispatch(action)\r\n    }, [])\r\n\r\n    const removeTodolist = useCallback(function (id: string) {\r\n        const thunk = removeTodolistTC(id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeTodolistTitle = useCallback(function (id: string, title: string) {\r\n        const thunk = changeTodolistTitleTC(id, title)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTodolist = useCallback((title: string) => {\r\n        const thunk = addTodolistTC(title)\r\n        dispatch(thunk)\r\n    }, [dispatch])\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n\r\n    return <>\r\n        <Grid container style={{padding: '20px'}}>\r\n            <AddItemForm addItem={addTodolist}/>\r\n        </Grid>\r\n        <Grid container spacing={3}>\r\n            {\r\n                todolists.map(tl => {\r\n                    let allTodolistTasks = tasks[tl.id]\r\n\r\n                    return <Grid item key={tl.id}>\r\n                        <Paper style={{padding: '10px'}}>\r\n                            <Todolist\r\n                                todolist={tl}\r\n                                tasks={allTodolistTasks}\r\n                                removeTask={removeTask}\r\n                                changeFilter={changeFilter}\r\n                                addTask={addTask}\r\n                                changeTaskStatus={changeStatus}\r\n                                removeTodolist={removeTodolist}\r\n                                changeTaskTitle={changeTaskTitle}\r\n                                changeTodolistTitle={changeTodolistTitle}\r\n                                demo={demo}\r\n                            />\r\n                        </Paper>\r\n                    </Grid>\r\n                })\r\n            }\r\n        </Grid>\r\n    </>\r\n}\r\n",["122","123"],"F:\\IT\\src\\reportWebVitals.ts",[],["124","125"],"F:\\IT\\src\\utils\\error-utils.ts",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"126","replacedBy":"130"},{"ruleId":"128","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":10,"column":45,"nodeType":"134","messageId":"135","endLine":10,"endColumn":47},{"ruleId":"126","replacedBy":"136"},{"ruleId":"128","replacedBy":"137"},{"ruleId":"126","replacedBy":"138"},{"ruleId":"128","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":15,"column":97,"nodeType":"142","endLine":15,"endColumn":130,"suggestions":"143"},{"ruleId":"140","severity":1,"message":"141","line":20,"column":8,"nodeType":"142","endLine":20,"endColumn":41,"suggestions":"144"},{"ruleId":"140","severity":1,"message":"141","line":24,"column":8,"nodeType":"142","endLine":24,"endColumn":41,"suggestions":"145"},{"ruleId":"140","severity":1,"message":"146","line":30,"column":7,"nodeType":"142","endLine":30,"endColumn":9,"suggestions":"147"},{"ruleId":"140","severity":1,"message":"148","line":41,"column":7,"nodeType":"142","endLine":41,"endColumn":9,"suggestions":"149"},{"ruleId":"150","severity":1,"message":"151","line":2,"column":9,"nodeType":"152","messageId":"153","endLine":2,"endColumn":12},{"ruleId":"150","severity":1,"message":"154","line":2,"column":14,"nodeType":"152","messageId":"153","endLine":2,"endColumn":20},{"ruleId":"150","severity":1,"message":"155","line":2,"column":22,"nodeType":"152","messageId":"153","endLine":2,"endColumn":33},{"ruleId":"140","severity":1,"message":"156","line":35,"column":8,"nodeType":"142","endLine":35,"endColumn":10,"suggestions":"157"},{"ruleId":"140","severity":1,"message":"141","line":39,"column":8,"nodeType":"142","endLine":39,"endColumn":42,"suggestions":"158"},{"ruleId":"140","severity":1,"message":"141","line":46,"column":8,"nodeType":"142","endLine":46,"endColumn":54,"suggestions":"159"},{"ruleId":"140","severity":1,"message":"141","line":48,"column":95,"nodeType":"142","endLine":48,"endColumn":134,"suggestions":"160"},{"ruleId":"140","severity":1,"message":"141","line":49,"column":101,"nodeType":"142","endLine":49,"endColumn":140,"suggestions":"161"},{"ruleId":"140","severity":1,"message":"141","line":50,"column":107,"nodeType":"142","endLine":50,"endColumn":146,"suggestions":"162"},{"ruleId":"126","replacedBy":"163"},{"ruleId":"128","replacedBy":"164"},{"ruleId":"150","severity":1,"message":"165","line":4,"column":9,"nodeType":"152","messageId":"153","endLine":4,"endColumn":18},{"ruleId":"140","severity":1,"message":"148","line":34,"column":8,"nodeType":"142","endLine":34,"endColumn":10,"suggestions":"166"},{"ruleId":"167","severity":1,"message":"168","line":75,"column":28,"nodeType":"169","endLine":75,"endColumn":45},{"ruleId":"150","severity":1,"message":"170","line":5,"column":9,"nodeType":"152","messageId":"153","endLine":5,"endColumn":22},{"ruleId":"132","severity":1,"message":"133","line":13,"column":94,"nodeType":"134","messageId":"135","endLine":13,"endColumn":96},{"ruleId":"150","severity":1,"message":"171","line":3,"column":35,"nodeType":"152","messageId":"153","endLine":3,"endColumn":47},{"ruleId":"150","severity":1,"message":"172","line":5,"column":9,"nodeType":"152","messageId":"153","endLine":5,"endColumn":18},{"ruleId":"140","severity":1,"message":"173","line":36,"column":7,"nodeType":"142","endLine":36,"endColumn":9,"suggestions":"174"},{"ruleId":"140","severity":1,"message":"148","line":41,"column":8,"nodeType":"142","endLine":41,"endColumn":10,"suggestions":"175"},{"ruleId":"140","severity":1,"message":"148","line":46,"column":8,"nodeType":"142","endLine":46,"endColumn":10,"suggestions":"176"},{"ruleId":"140","severity":1,"message":"148","line":51,"column":8,"nodeType":"142","endLine":51,"endColumn":10,"suggestions":"177"},{"ruleId":"140","severity":1,"message":"148","line":56,"column":8,"nodeType":"142","endLine":56,"endColumn":10,"suggestions":"178"},{"ruleId":"140","severity":1,"message":"148","line":61,"column":8,"nodeType":"142","endLine":61,"endColumn":10,"suggestions":"179"},{"ruleId":"140","severity":1,"message":"148","line":66,"column":8,"nodeType":"142","endLine":66,"endColumn":10,"suggestions":"180"},{"ruleId":"140","severity":1,"message":"148","line":71,"column":8,"nodeType":"142","endLine":71,"endColumn":10,"suggestions":"181"},{"ruleId":"126","replacedBy":"182"},{"ruleId":"128","replacedBy":"183"},{"ruleId":"126","replacedBy":"184"},{"ruleId":"128","replacedBy":"185"},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],["186"],["187"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["186"],["187"],["186"],["187"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.","ArrayExpression",["188"],["189"],["190"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["191"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["192"],"@typescript-eslint/no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'FormControl' is defined but never used.","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'props.todolist.id'. Either include them or remove the dependency array.",["193"],["194"],["195"],["196"],["197"],["198"],["186"],["187"],"'addTaskTC' is defined but never used.",["199"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'setAppErrorAC' is defined but never used.","'todolistsAPI' is defined but never used.","'addTaskAC' is defined but never used.","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'isLoggedIn'. Either include them or remove the dependency array.",["200"],["201"],["202"],["203"],["204"],["205"],["206"],["207"],["186"],["187"],["186"],["187"],"no-global-assign","no-unsafe-negation",{"desc":"208","fix":"209"},{"desc":"208","fix":"210"},{"desc":"208","fix":"211"},{"desc":"212","fix":"213"},{"desc":"212","fix":"214"},{"desc":"215","fix":"216"},{"desc":"208","fix":"217"},{"desc":"208","fix":"218"},{"desc":"208","fix":"219"},{"desc":"208","fix":"220"},{"desc":"208","fix":"221"},{"desc":"212","fix":"222"},{"desc":"223","fix":"224"},{"desc":"212","fix":"225"},{"desc":"212","fix":"226"},{"desc":"212","fix":"227"},{"desc":"212","fix":"228"},{"desc":"212","fix":"229"},{"desc":"212","fix":"230"},{"desc":"212","fix":"231"},"Update the dependencies array to be: [props]",{"range":"232","text":"233"},{"range":"234","text":"233"},{"range":"235","text":"233"},"Update the dependencies array to be: [dispatch]",{"range":"236","text":"237"},{"range":"238","text":"237"},"Update the dependencies array to be: [demo, dispatch, props.todolist.id]",{"range":"239","text":"240"},{"range":"241","text":"233"},{"range":"242","text":"233"},{"range":"243","text":"233"},{"range":"244","text":"233"},{"range":"245","text":"233"},{"range":"246","text":"237"},"Update the dependencies array to be: [demo, dispatch, isLoggedIn]",{"range":"247","text":"248"},{"range":"249","text":"237"},{"range":"250","text":"237"},{"range":"251","text":"237"},{"range":"252","text":"237"},{"range":"253","text":"237"},{"range":"254","text":"237"},{"range":"255","text":"237"},[765,798],"[props]",[1071,1104],[1261,1294],[925,927],"[dispatch]",[1344,1346],[1464,1466],"[demo, dispatch, props.todolist.id]",[1581,1615],[1846,1892],[1991,2030],[2133,2172],[2281,2320],[945,947],[1314,1316],"[demo, dispatch, isLoggedIn]",[1485,1487],[1656,1658],[1861,1863],[2074,2076],[2275,2277],[2422,2424],[2601,2603]]