[{"F:\\IT\\src\\index.tsx":"1","F:\\IT\\src\\reportWebVitals.ts":"2","F:\\IT\\src\\app\\store.ts":"3","F:\\IT\\src\\app\\App.tsx":"4","F:\\IT\\src\\features\\TodolistsList\\tasks-reducer.ts":"5","F:\\IT\\src\\features\\TodolistsList\\todolists-reducer.ts":"6","F:\\IT\\src\\features\\TodolistsList\\TodolistsList.tsx":"7","F:\\IT\\src\\api\\todolists-api.ts":"8","F:\\IT\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"9","F:\\IT\\src\\components\\AddItemForm\\AddItemForm.tsx":"10","F:\\IT\\src\\components\\EditableSpan\\EditableSpan.tsx":"11","F:\\IT\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"12","F:\\IT\\src\\app\\app-reducer.ts":"13","F:\\IT\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx":"14","F:\\IT\\src\\utils\\error-utils.ts":"15"},{"size":643,"mtime":1611301434000,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":1607869388000,"results":"18","hashOfConfig":"17"},{"size":1101,"mtime":1613723265468,"results":"19","hashOfConfig":"17"},{"size":1262,"mtime":1613727157580,"results":"20","hashOfConfig":"17"},{"size":6493,"mtime":1613744946322,"results":"21","hashOfConfig":"17"},{"size":5110,"mtime":1613739940778,"results":"22","hashOfConfig":"17"},{"size":3815,"mtime":1613742651920,"results":"23","hashOfConfig":"17"},{"size":2676,"mtime":1613743912832,"results":"24","hashOfConfig":"17"},{"size":4153,"mtime":1613743915053,"results":"25","hashOfConfig":"17"},{"size":1735,"mtime":1613742443166,"results":"26","hashOfConfig":"17"},{"size":1201,"mtime":1613744785141,"results":"27","hashOfConfig":"17"},{"size":1959,"mtime":1613744463382,"results":"28","hashOfConfig":"17"},{"size":926,"mtime":1613733041397,"results":"29","hashOfConfig":"17"},{"size":968,"mtime":1613729023250,"results":"30","hashOfConfig":"17"},{"size":798,"mtime":1613737970749,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"tn0uo4",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\IT\\src\\index.tsx",[],["66","67"],"F:\\IT\\src\\reportWebVitals.ts",[],"F:\\IT\\src\\app\\store.ts",[],"F:\\IT\\src\\app\\App.tsx",["68"],"import React from 'react'\r\nimport './App.css'\r\nimport {AppBar, Button, Container, IconButton, LinearProgress, Toolbar, Typography} from '@material-ui/core'\r\nimport {Menu} from '@material-ui/icons'\r\nimport {TodolistsList} from '../features/TodolistsList/TodolistsList'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"./store\";\r\nimport {ErrorSnackbar} from \"../components/ErrorSnackbar/ErrorSnackbar\";\r\n\r\nfunction App() {\r\n    let status=useSelector<AppRootStateType>(state =>state.app.status )\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <ErrorSnackbar/>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n                        <Menu/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\">\r\n                        News\r\n                    </Typography>\r\n                    <Button color=\"inherit\">Login</Button>\r\n                </Toolbar>\r\n\r\n            </AppBar>\r\n            {status==='loading'&&<LinearProgress color='secondary'/>}\r\n            <Container fixed>\r\n                <TodolistsList/>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","F:\\IT\\src\\features\\TodolistsList\\tasks-reducer.ts",["69","70"],"F:\\IT\\src\\features\\TodolistsList\\todolists-reducer.ts",["71"],"F:\\IT\\src\\features\\TodolistsList\\TodolistsList.tsx",["72","73","74","75","76","77","78","79"],"F:\\IT\\src\\api\\todolists-api.ts",[],"F:\\IT\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["80","81","82","83","84","85"],"import React, {useCallback, useEffect} from 'react'\r\nimport {AddItemForm} from '../../../components/AddItemForm/AddItemForm'\r\nimport {EditableSpan} from '../../../components/EditableSpan/EditableSpan'\r\nimport {Button, IconButton} from '@material-ui/core'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {Task} from './Task/Task'\r\nimport {TaskStatuses, TaskType} from '../../../api/todolists-api'\r\nimport {FilterValuesType} from '../todolists-reducer'\r\nimport {useDispatch} from 'react-redux'\r\nimport {fetchTasksTC} from '../tasks-reducer'\r\nimport {RequestStatusType} from \"../../../app/app-reducer\";\r\n\r\ntype PropsType = {\r\n    id: string\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    removeTodolist: (id: string) => void\r\n    changeTodolistTitle: (id: string, newTitle: string) => void\r\n    filter: FilterValuesType\r\n    entityStatus:RequestStatusType\r\n\r\n}\r\n\r\nexport const Todolist = React.memo(function (props: PropsType) {\r\n    console.log('Todolist called')\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        const thunk = fetchTasksTC(props.id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback((title: string) => {\r\n        props.addTask(title, props.id)\r\n    }, [props.addTask, props.id])\r\n\r\n    const removeTodolist = () => {\r\n        props.removeTodolist(props.id)\r\n    }\r\n    const changeTodolistTitle = useCallback((title: string) => {\r\n        props.changeTodolistTitle(props.id, title)\r\n    }, [props.id, props.changeTodolistTitle])\r\n\r\n    const onAllClickHandler = useCallback(() => props.changeFilter('all', props.id), [props.id, props.changeFilter])\r\n    const onActiveClickHandler = useCallback(() => props.changeFilter('active', props.id), [props.id, props.changeFilter])\r\n    const onCompletedClickHandler = useCallback(() => props.changeFilter('completed', props.id), [props.id, props.changeFilter])\r\n\r\n\r\n    let tasksForTodolist = props.tasks\r\n\r\n    if (props.filter === 'active') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.New)\r\n    }\r\n    if (props.filter === 'completed') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.Completed)\r\n    }\r\n\r\n    return <div>\r\n        <h3><EditableSpan value={props.title} onChange={changeTodolistTitle}/>\r\n\r\n            <IconButton\r\n                onClick={removeTodolist}\r\n                disabled={props.entityStatus===\"loading\"}\r\n            >\r\n                <Delete/>\r\n            </IconButton>\r\n        </h3>\r\n        <AddItemForm disable={props.entityStatus===\"loading\"}  addItem={addTask}\r\n\r\n        />\r\n        <div>\r\n            {\r\n                tasksForTodolist.map(t => <Task key={t.id} task={t} todolistId={props.id}\r\n                                                removeTask={props.removeTask}\r\n                                                changeTaskTitle={props.changeTaskTitle}\r\n                                                changeTaskStatus={props.changeTaskStatus}\r\n                />)\r\n            }\r\n        </div>\r\n        <div style={{paddingTop: '10px'}}>\r\n            <Button variant={props.filter === 'all' ? 'outlined' : 'text'}\r\n                    onClick={onAllClickHandler}\r\n                    color={'default'}\r\n            >All\r\n            </Button>\r\n            <Button variant={props.filter === 'active' ? 'outlined' : 'text'}\r\n                    onClick={onActiveClickHandler}\r\n                    color={'primary'}>Active\r\n            </Button>\r\n            <Button variant={props.filter === 'completed' ? 'outlined' : 'text'}\r\n                    onClick={onCompletedClickHandler}\r\n                    color={'secondary'}>Completed\r\n            </Button>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\n","F:\\IT\\src\\components\\AddItemForm\\AddItemForm.tsx",["86","87","88","89"],"F:\\IT\\src\\components\\EditableSpan\\EditableSpan.tsx",["90"],"F:\\IT\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["91","92","93"],"F:\\IT\\src\\app\\app-reducer.ts",[],"F:\\IT\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx",["94","95"],"import React from 'react'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {setAppErrorAC} from \"../../app/app-reducer\";\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />\r\n}\r\n\r\nexport function ErrorSnackbar() {\r\nlet dispatch=useDispatch()\r\n    const [open, setOpen] = React.useState(true)\r\n\r\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        dispatch(setAppErrorAC(null))\r\n    }\r\n    let error =useSelector<AppRootStateType>(state => state.app.error);\r\n    return (\r\n        <Snackbar open={ error !== null } autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"error\">\r\n                {''}{error}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n","F:\\IT\\src\\utils\\error-utils.ts",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":6,"column":9,"nodeType":"102","messageId":"103","endLine":6,"endColumn":20},{"ruleId":"100","severity":1,"message":"104","line":3,"column":5,"nodeType":"102","messageId":"103","endLine":3,"endColumn":21},{"ruleId":"100","severity":1,"message":"105","line":12,"column":5,"nodeType":"102","messageId":"103","endLine":12,"endColumn":17},{"ruleId":"100","severity":1,"message":"106","line":82,"column":27,"nodeType":"102","messageId":"103","endLine":82,"endColumn":31},{"ruleId":"107","severity":1,"message":"108","line":27,"column":8,"nodeType":"109","endLine":27,"endColumn":10,"suggestions":"110"},{"ruleId":"107","severity":1,"message":"111","line":32,"column":8,"nodeType":"109","endLine":32,"endColumn":10,"suggestions":"112"},{"ruleId":"107","severity":1,"message":"111","line":37,"column":8,"nodeType":"109","endLine":37,"endColumn":10,"suggestions":"113"},{"ruleId":"107","severity":1,"message":"111","line":42,"column":8,"nodeType":"109","endLine":42,"endColumn":10,"suggestions":"114"},{"ruleId":"107","severity":1,"message":"111","line":47,"column":8,"nodeType":"109","endLine":47,"endColumn":10,"suggestions":"115"},{"ruleId":"107","severity":1,"message":"111","line":52,"column":8,"nodeType":"109","endLine":52,"endColumn":10,"suggestions":"116"},{"ruleId":"107","severity":1,"message":"111","line":57,"column":8,"nodeType":"109","endLine":57,"endColumn":10,"suggestions":"117"},{"ruleId":"107","severity":1,"message":"111","line":62,"column":8,"nodeType":"109","endLine":62,"endColumn":10,"suggestions":"118"},{"ruleId":"107","severity":1,"message":"119","line":36,"column":8,"nodeType":"109","endLine":36,"endColumn":10,"suggestions":"120"},{"ruleId":"107","severity":1,"message":"121","line":40,"column":8,"nodeType":"109","endLine":40,"endColumn":33,"suggestions":"122"},{"ruleId":"107","severity":1,"message":"121","line":47,"column":8,"nodeType":"109","endLine":47,"endColumn":45,"suggestions":"123"},{"ruleId":"107","severity":1,"message":"121","line":49,"column":86,"nodeType":"109","endLine":49,"endColumn":116,"suggestions":"124"},{"ruleId":"107","severity":1,"message":"121","line":50,"column":92,"nodeType":"109","endLine":50,"endColumn":122,"suggestions":"125"},{"ruleId":"107","severity":1,"message":"121","line":51,"column":98,"nodeType":"109","endLine":51,"endColumn":128,"suggestions":"126"},{"ruleId":"100","severity":1,"message":"127","line":2,"column":9,"nodeType":"102","messageId":"103","endLine":2,"endColumn":12},{"ruleId":"100","severity":1,"message":"128","line":2,"column":14,"nodeType":"102","messageId":"103","endLine":2,"endColumn":20},{"ruleId":"100","severity":1,"message":"129","line":2,"column":22,"nodeType":"102","messageId":"103","endLine":2,"endColumn":33},{"ruleId":"100","severity":1,"message":"130","line":17,"column":9,"nodeType":"102","messageId":"103","endLine":17,"endColumn":21},{"ruleId":"100","severity":1,"message":"130","line":16,"column":9,"nodeType":"102","messageId":"103","endLine":16,"endColumn":21},{"ruleId":"107","severity":1,"message":"121","line":18,"column":97,"nodeType":"109","endLine":18,"endColumn":130,"suggestions":"131"},{"ruleId":"107","severity":1,"message":"121","line":23,"column":8,"nodeType":"109","endLine":23,"endColumn":41,"suggestions":"132"},{"ruleId":"107","severity":1,"message":"121","line":27,"column":8,"nodeType":"109","endLine":27,"endColumn":41,"suggestions":"133"},{"ruleId":"100","severity":1,"message":"134","line":14,"column":12,"nodeType":"102","messageId":"103","endLine":14,"endColumn":16},{"ruleId":"100","severity":1,"message":"135","line":14,"column":18,"nodeType":"102","messageId":"103","endLine":14,"endColumn":25},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"@typescript-eslint/no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","'FilterValuesType' is defined but never used.","'TodolistType' is defined but never used.","'task' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["138"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["139"],["140"],["141"],["142"],["143"],["144"],["145"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.id'. Either include them or remove the dependency array.",["146"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["147"],["148"],["149"],["150"],["151"],"'Box' is defined but never used.","'Button' is defined but never used.","'FormControl' is defined but never used.","'entityStatus' is assigned a value but never used.",["152"],["153"],["154"],"'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},{"desc":"155","fix":"157"},{"desc":"155","fix":"158"},{"desc":"155","fix":"159"},{"desc":"155","fix":"160"},{"desc":"155","fix":"161"},{"desc":"155","fix":"162"},{"desc":"155","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"166","fix":"168"},{"desc":"166","fix":"169"},{"desc":"166","fix":"170"},{"desc":"166","fix":"171"},{"desc":"166","fix":"172"},{"desc":"166","fix":"173"},{"desc":"166","fix":"174"},"Update the dependencies array to be: [dispatch]",{"range":"175","text":"176"},{"range":"177","text":"176"},{"range":"178","text":"176"},{"range":"179","text":"176"},{"range":"180","text":"176"},{"range":"181","text":"176"},{"range":"182","text":"176"},{"range":"183","text":"176"},"Update the dependencies array to be: [dispatch, props.id]",{"range":"184","text":"185"},"Update the dependencies array to be: [props]",{"range":"186","text":"187"},{"range":"188","text":"187"},{"range":"189","text":"187"},{"range":"190","text":"187"},{"range":"191","text":"187"},{"range":"192","text":"187"},{"range":"193","text":"187"},{"range":"194","text":"187"},[1049,1051],"[dispatch]",[1220,1222],[1391,1393],[1596,1598],[1809,1811],[2010,2012],[2157,2159],[2336,2338],[1474,1476],"[dispatch, props.id]",[1582,1607],"[props]",[1820,1857],[1947,1977],[2071,2101],[2201,2231],[867,900],[1173,1206],[1363,1396]]